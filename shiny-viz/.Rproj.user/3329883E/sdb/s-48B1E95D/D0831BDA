{
    "collab_server" : "",
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(leaflet)\n\n\nshinyServer(function(input, output) {\n\n  clinics_filtered <- reactive({\n    df <- clinics %>% \n      filter(provider %in% input$provider) %>% \n      filter(sexual_orientation %in% input$sexualOrientation)\n    df\n  })\n  \n  output$variablesUi <- renderUI({\n    selectizeInput(\"variablesSelect\", \"Feedback tags:\",\n                   c(\"clean\", \"messy\", \"uncomfortable\", \"nonjudgemental\", \"friendly\", \"safe\", \"fast\", \"longwaittimes\", \"professional\", \"empathy\"),\n                   selected =  c(\"clean\", \"messy\", \"uncomfortable\", \"nonjudgemental\", \"friendly\", \"safe\", \"fast\", \"longwaittimes\", \"professional\", \"empathy\"), \n                   multiple = TRUE,\n                   options = list(placeholder = \"Select feedback tags to show\"))\n  })\n  \n  output$userInfo <- renderPlotly({\n    xaxis <- list(\n      autotick = FALSE,\n      ticks = \"outside\",\n      tick0 = 0,\n      dtick = 1,\n      tickcolor = toRGB(\"#262626\"),\n      title = \"clinic\"\n    )\n    \n    yaxis <- list(\n      title = 'frequency'\n    )\n    \n    plot_ly(clinics_filtered(), x = ~clinic_name, y = ~n, type=\"bar\") %>% \n      layout(xaxis = xaxis, yaxis = yaxis, legend = list(orientation = 'h', x = 0.1, y = -0.3))\n  })\n  \n  \n  output$map <- renderLeaflet({\n    leaflet(data = clinics_filtered()) %>% \n      addProviderTiles(\"OpenMapSurfer.Grayscale\", options = providerTileOptions(minZoom = 9)) %>% \n      addCircleMarkers(~long, ~lat, label=~as.character(clinic_name), stroke=FALSE, fillOpacity=0.8)\n  })\n  \n  \n  clinicTable <- reactive({\n    clinics_table <- clinics_filtered() %>% \n      group_by(clinic_name) %>% \n      summarise(\n        number_patients = n(),\n        avg_age = round(quantile(age, 0.3),1),\n        msp_required = mean(msp_required)\n      )\n    clinics_table\n  })\n  \n  \n  output$dataTable <- renderTable(\n    {\n      clinicTable()\n    },\n    include.rownames = FALSE\n  )\n\n})\n",
    "created" : 1520122830422.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "880291725",
    "id" : "D0831BDA",
    "lastKnownWriteTime" : 1520133035,
    "last_content_update" : 1520133035679,
    "path" : "~/Dev/mds/projcts/team-oceanview/shiny-viz/shiny/server.R",
    "project_path" : "shiny/server.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}